architectury {
    common rootProject.enabled_platforms.split(',')
}

dependencies {
    // We depend on Fabric Loader here to use the Fabric @Environment annotations,
    // which get remapped to the correct annotations on each platform.
    // Do NOT use other classes from Fabric Loader.
    modImplementation "net.fabricmc:fabric-loader:$rootProject.fabric_loader_version"

    // Architectury API. This is optional, and you can comment it out if you don't need it.
    modImplementation "dev.architectury:architectury:$rootProject.architectury_api_version"

    // Geckolib
    modImplementation "software.bernie.geckolib:geckolib-common-${rootProject.minecraft_version}:${rootProject.geckolib_version}"

    // modCompileOnly "curse.maven:spirit-api-1261885:${spirit_api_version_id_fabric}"
    modCompileOnly ("com.jship.spiritapi:spiritapi-common:1.0.1-1.21.1")

    // Jade
    modCompileOnly "curse.maven:jade-324717:$rootProject.jade_version_id_fabric"

    // EMI
    compileOnly "dev.emi:emi-xplat-mojmap:${rootProject.emi_version}:api"
    testCompileOnly "dev.emi:emi-xplat-mojmap:${rootProject.emi_version}:api"

    // JEI
    compileOnly "mezz.jei:jei-${rootProject.minecraft_version}-common-api:${rootProject.jei_version}"
    testCompileOnly "mezz.jei:jei-${rootProject.minecraft_version}-common-api:${rootProject.jei_version}"
}

sourceSets {
    main {
        java.srcDir "src"
        resources.srcDir "src/generated"
        resources.exclude ".cache"
    }
}
